    Jmp     start       ; переход на начало головной программы,    
;----------------------------------
    ; обработчик   прерываний от таймера
    ; ( если требуется индивидуальным заданием)
    ORG     0bH 
    JMP     50h
    Org     50h    
    PUSH    psw         ; защита основных регистров
    PUSH    acc
    MOV     psw, #08h   ; Изменение банка регистров
    
    ;<<выполнение действий,  вызываемых при прерывании>>
    ;<<   в соответствии с индивидуальным заданием>>

    POP     acc
    POP     psw         ; восстановление регистров        
    RETI                ; выход из обработчика
; ------------------------------- конец обработчика прерываний от таймера 

;-------------------обработчик   прерываний от последовательного порта
; ( если требуется индивидуальным заданием)
    ORG     23H    
    PUSH    psw         ; защита основных регистров
    PUSH    acc
    MOV     psw,# 10h   ; Изменение банка регистров

    ;<<выполнение действий,  вызываемых при прерывании>>
    ;<<   в соответствии с индивидуальным заданием>>
    
    POP     acc
    POP     psw         ; восстановление регистров        
    RETI                ; выход из обработчика
; -------------- конец обработчика прерываний от порта 

    ORG     100H        ; директива выделения памяти программ
                        ; место расположения рабочей программы
    mov     sp,#50h     ;  установка вершины стека
    MOV     PSW,#00          
    MOV     rr,#nn      ; rr  - имя регистра ( любого по выбору студента)
                        ; nn  - число повторений теста   ( любое число по выбору
                        ; студента) 
    ;<< настройка режима последовательного порта ( загрузка регистрa SCON)>>
    ;<< настройка таймера ( загрузка регистров  TMOD,TLx,THx)>> 
    MOV     ie,#xx      ; разрешить прерывания в соответствии с инд. заданием
Repeate:			    ; метка возврата
    NOP                 ; 3 команды имитируют фоновую задачу
    NOP                 ; 
    NOP
    ; jmp repeate  ;  раскомментировать при задании ПГ=1
    ; Jnb SCONx,repeate   ; раскомментировать при задании ПГ=3 *
    ; Jnb SCONx, $   ; раскомментировать при задании ПГ=2 *
                        ; *  - ожидание завершения обмена ; x=   0 или 1 в зависимости от  ;индивидуального задания 
    ;<<  преобразование принятых с порта данных>>                    
    MOV     pp,a        ; выдача результата на порт вывода
    DJNZ    rr,repeate  ; повторить для новых данных если они не исчерпаны   
    JMP     $           ; блокировка продолжения после исчерпания теста
